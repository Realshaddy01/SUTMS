# Generated by Django 5.2 on 2025-04-06 12:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vehicles', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LicensePlateDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_image', models.ImageField(upload_to='detections/originals/', verbose_name='Original Image')),
                ('cropped_plate', models.ImageField(blank=True, null=True, upload_to='detections/plates/', verbose_name='Cropped Plate')),
                ('detected_text', models.CharField(blank=True, max_length=50, verbose_name='Detected Text')),
                ('corrected_text', models.CharField(blank=True, max_length=50, verbose_name='Corrected Text')),
                ('confidence', models.FloatField(default=0, help_text='Confidence score of the detection (0-100)', verbose_name='Confidence')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('location_name', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('manual', 'Manual Entry')], default='failed', max_length=20, verbose_name='Status')),
                ('detection_method', models.CharField(choices=[('automatic', 'Automatic'), ('manual', 'Manual'), ('api', 'API')], default='automatic', max_length=20, verbose_name='Detection Method')),
                ('processing_time_ms', models.IntegerField(default=0, verbose_name='Processing Time (ms)')),
                ('is_in_training_set', models.BooleanField(default=False, verbose_name='Is in Training Set')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('matched_vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='detections', to='vehicles.vehicle', verbose_name='Matched Vehicle')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='license_plate_detections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'License Plate Detection',
                'verbose_name_plural': 'License Plate Detections',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OCRModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=20)),
                ('model_type', models.CharField(choices=[('detection', 'License Plate Detection'), ('recognition', 'Text Recognition'), ('combined', 'Combined Detection and Recognition')], default='combined', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('file_path', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=False)),
                ('accuracy', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_models', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'OCR Model',
                'verbose_name_plural': 'OCR Models',
                'ordering': ['-created_at'],
                'unique_together': {('name', 'version')},
            },
        ),
    ]
